{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { FETCH_BOOTH_NAMES_REQUEST, FETCH_BOOTH_NAMES_SUCCESS, FETCH_BOOTH_NAMES_FAILURE } from '../actions/actionTypes';\nconst initialBoothNamesState = {\n  loading: false,\n  data: [],\n  // Ensure this is initialized as an array\n  error: null\n};\nconst boothNameReducer = (state = initialBoothNamesState, action) => {\n  switch (action.type) {\n    case FETCH_BOOTH_NAMES_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: null\n      });\n    case FETCH_BOOTH_NAMES_SUCCESS:\n      console.log(\"Booth Names Fetch Success: \", action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        data: action.payload || []\n      });\n    // Ensure it's an array\n    case FETCH_BOOTH_NAMES_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: false,\n        error: action.payload\n      });\n    default:\n      return state;\n  }\n};\nexport default boothNameReducer;","map":{"version":3,"names":["FETCH_BOOTH_NAMES_REQUEST","FETCH_BOOTH_NAMES_SUCCESS","FETCH_BOOTH_NAMES_FAILURE","initialBoothNamesState","loading","data","error","boothNameReducer","state","action","type","_objectSpread","console","log","payload"],"sources":["/home/actimize/Music/survey_app_deploy/app/javascript/redux/reducer/boothNameReducer.js"],"sourcesContent":["import {\n  FETCH_BOOTH_NAMES_REQUEST,\n  FETCH_BOOTH_NAMES_SUCCESS,\n  FETCH_BOOTH_NAMES_FAILURE,\n} from '../actions/actionTypes';\n\nconst initialBoothNamesState = {\n  loading: false,\n  data: [], // Ensure this is initialized as an array\n  error: null,\n};\n\nconst boothNameReducer = (state = initialBoothNamesState, action) => {\n  switch (action.type) {\n    case FETCH_BOOTH_NAMES_REQUEST:\n      return { ...state, loading: true, error: null };\n    case FETCH_BOOTH_NAMES_SUCCESS:\n      console.log(\"Booth Names Fetch Success: \", action.payload);\n      return { ...state, loading: false, data: action.payload || [] }; // Ensure it's an array\n    case FETCH_BOOTH_NAMES_FAILURE:\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default boothNameReducer;\n"],"mappings":";;;AAAA,SACEA,yBAAyB,EACzBC,yBAAyB,EACzBC,yBAAyB,QACpB,wBAAwB;AAE/B,MAAMC,sBAAsB,GAAG;EAC7BC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,EAAE;EAAE;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,GAAGL,sBAAsB,EAAEM,MAAM,KAAK;EACnE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,yBAAyB;MAC5B,OAAAW,aAAA,CAAAA,aAAA,KAAYH,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEE,KAAK,EAAE;MAAI;IAC/C,KAAKL,yBAAyB;MAC5BW,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEJ,MAAM,CAACK,OAAO,CAAC;MAC1D,OAAAH,aAAA,CAAAA,aAAA,KAAYH,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEC,IAAI,EAAEI,MAAM,CAACK,OAAO,IAAI;MAAE;IAAI;IACnE,KAAKZ,yBAAyB;MAC5B,OAAAS,aAAA,CAAAA,aAAA,KAAYH,KAAK;QAAEJ,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAEG,MAAM,CAACK;MAAO;IAC1D;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}